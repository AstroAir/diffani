/* Keyframe Editor Styles */
.keyframeEditor {
  display: flex;
  flex-direction: column;
  background: rgba(255, 255, 255, 0.02);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: var(--border-radius-sm);
  overflow: hidden;
  margin-bottom: var(--spacing-sm);
}

.propertyHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--spacing-xs) var(--spacing-sm);
  background: rgba(255, 255, 255, 0.05);
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.propertyName {
  font-weight: 600;
  font-size: 13px;
  color: var(--text-primary);
}

.propertyType {
  font-size: 11px;
  color: var(--text-muted);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  background: rgba(255, 255, 255, 0.1);
  padding: 2px 6px;
  border-radius: 3px;
}

.keyframeTrack {
  position: relative;
  height: 100px;
  background: rgba(0, 0, 0, 0.1);
  cursor: crosshair;
  overflow: hidden;
  
  &:hover {
    background: rgba(0, 0, 0, 0.15);
  }
}

.propertyCurve {
  position: absolute;
  top: 0;
  left: 0;
  pointer-events: none;
  z-index: 1;
}

.currentTimeIndicator {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 2px;
  background: #ff6b6b;
  z-index: 3;
  pointer-events: none;
  
  &::before {
    content: '';
    position: absolute;
    top: -4px;
    left: -4px;
    width: 10px;
    height: 8px;
    background: #ff6b6b;
    clip-path: polygon(50% 100%, 0 0, 100% 0);
  }
}

.keyframe {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 12px;
  height: 12px;
  cursor: grab;
  z-index: 2;
  
  &:hover {
    transform: translateY(-50%) scale(1.2);
  }
  
  &.selected {
    transform: translateY(-50%) scale(1.3);
    z-index: 4;
  }
  
  &.dragging {
    cursor: grabbing;
    transform: translateY(-50%) scale(1.4);
    z-index: 5;
  }
}

.keyframeHandle {
  width: 100%;
  height: 100%;
  background: var(--accent-color);
  border: 2px solid rgba(255, 255, 255, 0.8);
  border-radius: 50%;
  transition: all var(--transition-fast);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
  
  .keyframe:hover & {
    background: #00d4ff;
    box-shadow: 
      0 0 12px rgba(0, 122, 204, 0.5),
      0 2px 8px rgba(0, 0, 0, 0.3);
  }
  
  .keyframe.selected & {
    background: #00d4ff;
    border-color: white;
    box-shadow: 
      0 0 16px rgba(0, 212, 255, 0.6),
      0 2px 8px rgba(0, 0, 0, 0.3);
  }
  
  .keyframe.dragging & {
    background: #ff6b6b;
    border-color: white;
    box-shadow: 
      0 0 20px rgba(255, 107, 107, 0.7),
      0 4px 12px rgba(0, 0, 0, 0.4);
  }
}

.valueEditor {
  position: absolute;
  top: -40px;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(0, 0, 0, 0.9);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: var(--border-radius-sm);
  padding: var(--spacing-xs);
  z-index: 10;
  
  &::after {
    content: '';
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    width: 0;
    height: 0;
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
    border-top: 6px solid rgba(0, 0, 0, 0.9);
  }
}

.valueInput,
.textInput {
  width: 80px;
  padding: 4px 6px;
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 3px;
  color: var(--text-primary);
  font-size: 12px;
  
  &:focus {
    outline: 2px solid var(--accent-color);
    outline-offset: 1px;
    background: rgba(255, 255, 255, 0.15);
    border-color: var(--accent-color);
  }
}

.colorInput {
  width: 40px;
  height: 30px;
  padding: 2px;
  background: transparent;
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 3px;
  cursor: pointer;
  
  &:focus {
    outline: 2px solid var(--accent-color);
    outline-offset: 1px;
    border-color: var(--accent-color);
  }
}

.booleanInput {
  width: 18px;
  height: 18px;
  accent-color: var(--accent-color);
  cursor: pointer;
}

.keyframeInfo {
  position: absolute;
  top: -80px;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(0, 0, 0, 0.9);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: var(--border-radius-sm);
  padding: var(--spacing-xs);
  min-width: 120px;
  z-index: 10;
  
  &::after {
    content: '';
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    width: 0;
    height: 0;
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
    border-top: 6px solid rgba(0, 0, 0, 0.9);
  }
}

.infoItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 11px;
  margin-bottom: 2px;
  
  &:last-child {
    margin-bottom: 0;
  }
  
  label {
    color: var(--text-muted);
    font-weight: 500;
  }
  
  span {
    color: var(--text-secondary);
    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', monospace;
  }
}

.gridLines {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  pointer-events: none;
  z-index: 0;
}

.gridLine {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 1px;
  background: rgba(255, 255, 255, 0.1);
  
  &:nth-child(5n) {
    background: rgba(255, 255, 255, 0.2);
  }
  
  &:first-child,
  &:last-child {
    background: rgba(255, 255, 255, 0.3);
  }
}

.propertyControls {
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
  padding: var(--spacing-xs) var(--spacing-sm);
  background: rgba(255, 255, 255, 0.02);
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  font-size: 11px;
}

.controlGroup {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  
  label {
    color: var(--text-muted);
    font-weight: 500;
  }
  
  span {
    color: var(--text-secondary);
    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', monospace;
  }
}

.defaultValue {
  background: rgba(255, 255, 255, 0.1);
  padding: 2px 4px;
  border-radius: 3px;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .keyframeEditor {
    font-size: 10px;
  }
  
  .keyframeTrack {
    height: 80px;
  }
  
  .keyframe {
    width: 10px;
    height: 10px;
  }
  
  .propertyControls {
    flex-wrap: wrap;
    gap: var(--spacing-sm);
  }
  
  .valueEditor {
    top: -35px;
  }
  
  .keyframeInfo {
    top: -70px;
    min-width: 100px;
  }
}

@media (max-width: 480px) {
  .propertyHeader {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-xs);
  }
  
  .keyframeTrack {
    height: 60px;
  }
  
  .keyframe {
    width: 8px;
    height: 8px;
  }
  
  .propertyControls {
    flex-direction: column;
    align-items: flex-start;
  }
}
